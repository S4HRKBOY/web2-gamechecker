schema {
    query: Query
    mutation: Mutation
}

type Query {
    games: [Game!]!
    game(id: ID!): Game
    gameReviews(id: ID!): [Review!]!
    review(id: ID!): Review
    reviews: [Review!]!
}
    
type Game {
    id: ID!
    title: String!
    description: String
    platforms: [String]
    genres: [String]
    publicationDate: String
    ageRating: String
    developer: String
    publisher: String
}

input GameInput {
    id: ID!
    title: String!
    description: String
    platforms: [String]
    genres: [String]
    publicationDate: String
    ageRating: String
    developer: String
    publisher: String
}

type Review {
  id: ID
  reviewHeadline: String
  reviewText: String
  rating: String
  reviewDate: String
  game: String
}

type Mutation {
  createGame(game: createGameInput!): Game!
  deleteGame(id: ID!): Boolean!
  updateGame(game: updateGameInput!): Game!
  createReview(review: createReviewInput!): Review!
  deleteReview(id: ID!): Boolean!
  updateReview(review: updateReviewInput!): Review!
}

input createGameInput {
  title: String!
  description: String
  platforms: [String]
  genres: [String]
  publicationDate: String
  ageRating: String
  developer: String
  publisher: String
}

input updateGameInput {
  id:ID!
  title: String
  description: String
  platforms: [String]
  genres: [String]
  publicationDate: String
  ageRating: String
  developer: String
  publisher: String
}

input createReviewInput{
  reviewHeadline: String
  reviewText: String
  rating: String
  reviewDate: String
  game: String
}

input updateReviewInput{
  reviewHeadline: String
  reviewText: String
  rating: String
  reviewDate: String
  game: String
}