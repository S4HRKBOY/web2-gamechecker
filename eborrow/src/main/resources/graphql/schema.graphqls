schema {
    query: Query
    mutation: Mutation
}

type Query {
    games: [Game!]!
    game(id: ID!): Game
    review(id: ID!): Review
    reviews: [Review!]!
    allGenres : [String!]!
    allPlatforms : [String!]!
    allAgeRatings : [String!]!
    accounts: [Account!]!
    account(id: ID!): Account
    accountId(username: String!, password: String!): ID
    emailTaken(email: String!): Boolean!
    emailUsedByOtherAccount(id: ID!, email: String!): Boolean!
    usernameTaken(username: String!): Boolean!
    usernameUsedByOtherAccount(id: ID!, username: String!): Boolean!
    existsByAccountAndGame(accountId: ID!, gameId: ID!): Boolean!
    accountHasGame(accountId: ID!, gameId: ID!): Boolean!
    gamesByQuery(query: queryInput!): [Game!]!
    gamesByFilter(filterInfo: filterInfoInput!): [Game!]!
}

type Mutation {
    createGame(game: createGameInput!): Game!
    deleteGame(id: ID!): Boolean!
    updateGame(game: updateGameInput!): Game!
    createReview(review: createReviewInput!, gameId: ID!, accountId: ID!): Review!
    deleteReview(id: ID!): Boolean!
    updateReview(review: updateReviewInput!): Review!
    createAccount(account: createAccountInput!): Account!
    updateAccount(account: updateAccountInput!): Account!
    deleteAccount(id: ID!): Boolean!
    addGameToAccount(accountId: ID!, gameId: ID!): Account!
    unlistGameFromAccount(accountId: ID!, gameId: ID!): Account!
    setPublisherStatus(id: ID!, publisher: Boolean): Account!
}

type Game {
    id: ID!
    title: String
    description: String
    platforms: [String]
    genres: [String]
    publicationDate: String
    ageRating: String
    developer: String
    publisher: String
    gameImage: String
    reviews: [Review]
}

type Account {
    id: ID!
    prename: String
    surname: String
    birthday: String
    username: String
    email: String
    password: String
    profilePicture: String
    publisher: Boolean
    taggedGames: [Game]
}

type Review {
  id: ID!
  reviewHeadline: String
  reviewText: String
  rating: Int
  reviewDate: String
  account: Account
}

input createGameInput {
  title: String!
  description: String!
  platforms: [String!]!
  genres: [String!]!
  publicationDate: String!
  ageRating: String!
  developer: String!
  publisher: String!
  gameImage: String
}

input updateGameInput {
  id:ID!
  title: String
  description: String
  platforms: [String]
  genres: [String]
  publicationDate: String
  ageRating: String
  developer: String
  publisher: String
  gameImage: String
}

input createReviewInput {
  reviewHeadline: String
  reviewText: String
  rating: Int
  reviewDate: String
}

input updateReviewInput{
  id:ID!
  reviewHeadline: String
  reviewText: String
  rating: String
  reviewDate: String
}

input createAccountInput {
  prename: String!
  surname: String!
  birthday: String
  username: String!
  email: String!
  password: String!
  profilePicture: String
}

input updateAccountInput {
  id: ID!
  prename: String!
  surname: String!
  birthday: String
  username: String!
  email: String!
  password: String!
  profilePicture: String
}

input queryInput {
    query: String!
}

input filterInfoInput{
    genre: String!
    platform: String!
    developer: String!
}